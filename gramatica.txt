/* Grupo de trabajo 03. Tomás Mendizábal y Alejandro Díaz Cuéllar */
/* 100461170@alumos.uc3m.es 100472173@alumnos.uc3m.es*/

Sentencia-> Expresion \n
Expresion -> (Operador Parametro Parametro) | ( = Variable Parametro)
Parametro -> Expresion | Numero | Variable 
     

limpiando:

Sentencia-> Expresion \n
Expresion-> (RestExpr
RestExpr-> Operador Parametro Parametro) |  =Variable Parametro)
Parametro -> Expresion | Numero | Variable 


JFLAP:
(+ 1 (= (1 3))) // sentencia que es valida y habra que controlar
S-> E s        {s = \n}
E-> (R
R-> o P P ) | = v P) {Operador(token)= +,-,*,/}
P-> E | n | v     {Numero(token)= 0-9, variable(token) = }

